version: "2.1"

services:
  namenode:
    image: ${DOCKERHUB_USERNAME}/hadoop-namenode:${RELEASE}
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - "9870:9870"

  resourcemanager:
    image: ${DOCKERHUB_USERNAME}/hadoop-resourcemanager:${RELEASE}
    container_name: resourcemanager
    restart: on-failure
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - datanode3
    env_file:
      - ./hadoop.env
    ports:
      - "8089:8088"

  historyserver:
    image: ${DOCKERHUB_USERNAME}/hadoop-historyserver:${RELEASE}
    container_name: historyserver
    depends_on:
      - namenode
      - datanode1
      - datanode2
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    ports:
      - "8188:8188"

  nodemanager1:
    image: ${DOCKERHUB_USERNAME}/hadoop-nodemanager:${RELEASE}
    container_name: nodemanager1
    depends_on:
      - namenode
      - datanode1
      - datanode2
    env_file:
      - ./hadoop.env
    ports:
      - "8042:8042"
    volumes:
      - ${PWD}/dish-config.json:/opt/dish/pash/cluster.json
      - ${PWD}/sample-script.sh:/opt/dish/sample.sh

  datanode1:
    image: ${DOCKERHUB_USERNAME}/hadoop-datanode:${RELEASE}
    container_name: datanode1
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env

  datanode2:
    image: ${DOCKERHUB_USERNAME}/hadoop-datanode:${RELEASE}
    container_name: datanode2
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop.env

  datanode3:
    image: ${DOCKERHUB_USERNAME}/hadoop-datanode:${RELEASE}
    container_name: datanode3
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    env_file:
      - ./hadoop.env

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  hadoop_datanode3:
  hadoop_historyserver:
